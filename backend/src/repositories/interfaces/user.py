from collections.abc import Sequence
from datetime import datetime
from typing import Protocol

from src.models.user import User


class UserRepositoryProtocol(Protocol):
    async def get(self, user_id: int) -> User | None: ...

    async def get_with_profile(self, user_id: int) -> User | None: ...

    async def get_by_email(self, email: str) -> User | None: ...

    async def get_by_username(self, username: str) -> User | None: ...

    async def check_username_email_exists(self, username: str, email: str) -> Sequence[User]: ...

    async def create(self, username: str, email: str, hashed_password: str) -> User: ...

    async def update_last_login(self, user_id: int, last_login: datetime | None) -> None: ...

    async def update_username(self, user_id: int, username: str) -> None: ...
