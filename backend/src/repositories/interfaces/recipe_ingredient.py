from collections.abc import Sequence
from typing import Protocol

from src.models.recipe_ingredient import RecipeIngredient


class RecipeIngredientRepositoryProtocol(Protocol):
    async def get_by_id(self, ingredient_id: int) -> RecipeIngredient | None: ...

    async def get_all_for_recipe(
        self, recipe_id: int, skip: int = 0, limit: int = 100
    ) -> Sequence[RecipeIngredient]: ...

    async def create(self, recipe_id: int, name: str, quantity: str | None = None) -> RecipeIngredient: ...

    async def bulk_create(self, ingredients_list: list[dict[str, int | str]]) -> Sequence[RecipeIngredient]: ...

    async def delete_by_recipe_id(self, recipe_id: int) -> None: ...

    async def delete_by_id(self, ingredient_id: int) -> None: ...

    async def exists(self, ingredient_id: int) -> bool: ...
