"use client"

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { useToast } from '@/hooks/use-toast'
import { runDeleteRecipeDiagnostics } from '@/utils/deleteRecipeDiagnostics'
import RecipesService from '@/services/recipes.service'
import AuthService from '@/services/auth.service'

export default function DeleteRecipeTest() {
    const [recipeId, setRecipeId] = useState('')
    const [isRunning, setIsRunning] = useState(false)
    const [results, setResults] = useState(null)
    const { toast } = useToast()

    const runDiagnostics = async () => {
        if (!recipeId) {
            toast({
                variant: "destructive",
                title: "–û—à–∏–±–∫–∞",
                description: "–í–≤–µ–¥–∏—Ç–µ ID —Ä–µ—Ü–µ–ø—Ç–∞",
            })
            return
        }

        setIsRunning(true)
        try {
            console.log('üîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞...')
            const diagnosticsResults = await runDeleteRecipeDiagnostics(parseInt(recipeId))
            setResults(diagnosticsResults)
            
            toast({
                title: "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
                description: `–ü—Ä–æ–π–¥–µ–Ω–æ: ${diagnosticsResults.summary.passed}, –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${diagnosticsResults.summary.failed}`,
            })
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error)
            toast({
                variant: "destructive",
                title: "–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
                description: error.message,
            })
        } finally {
            setIsRunning(false)
        }
    }

    const testDeleteRecipe = async () => {
        if (!recipeId) {
            toast({
                variant: "destructive",
                title: "–û—à–∏–±–∫–∞",
                description: "–í–≤–µ–¥–∏—Ç–µ ID —Ä–µ—Ü–µ–ø—Ç–∞",
            })
            return
        }

        setIsRunning(true)
        try {
            console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞...')
            await RecipesService.deleteRecipe(parseInt(recipeId))
            
            toast({
                title: "–£—Å–ø–µ—Ö",
                description: "–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω",
            })
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞:', error)
            toast({
                variant: "destructive",
                title: "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è",
                description: error.message,
            })
        } finally {
            setIsRunning(false)
        }
    }

    const checkAuth = () => {
        const token = AuthService.getAccessToken()
        if (token) {
            toast({
                title: "–¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω",
                description: `–¢–æ–∫–µ–Ω: ${token.substring(0, 20)}...`,
            })
        } else {
            toast({
                variant: "destructive",
                title: "–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω",
                description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É",
            })
        }
    }

    return (
        <Card className="w-full max-w-2xl mx-auto">
            <CardHeader>
                <CardTitle>üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤</CardTitle>
                <CardDescription>
                    –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤
                </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
                <div className="flex gap-2">
                    <Input
                        type="number"
                        placeholder="ID —Ä–µ—Ü–µ–ø—Ç–∞"
                        value={recipeId}
                        onChange={(e) => setRecipeId(e.target.value)}
                        className="flex-1"
                    />
                    <Button onClick={checkAuth} variant="outline">
                        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω
                    </Button>
                </div>

                <div className="flex gap-2">
                    <Button 
                        onClick={runDiagnostics} 
                        disabled={isRunning}
                        className="flex-1"
                    >
                        {isRunning ? '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...' : 'üîç –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É'}
                    </Button>
                    <Button 
                        onClick={testDeleteRecipe} 
                        disabled={isRunning}
                        variant="destructive"
                        className="flex-1"
                    >
                        {isRunning ? '–£–¥–∞–ª–µ–Ω–∏–µ...' : 'üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ'}
                    </Button>
                </div>

                {results && (
                    <div className="mt-4 p-4 bg-gray-50 rounded-lg">
                        <h3 className="font-semibold mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:</h3>
                        <div className="text-sm space-y-1">
                            <div>‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {results.summary.passed}</div>
                            <div>‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {results.summary.failed}</div>
                            <div>üìã –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {results.summary.total}</div>
                        </div>
                        
                        <details className="mt-2">
                            <summary className="cursor-pointer font-medium">–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</summary>
                            <pre className="mt-2 text-xs bg-white p-2 rounded border overflow-auto max-h-60">
                                {JSON.stringify(results, null, 2)}
                            </pre>
                        </details>
                    </div>
                )}

                <div className="text-xs text-gray-500 mt-4">
                    <p>üí° –°–æ–≤–µ—Ç—ã:</p>
                    <ul className="list-disc list-inside space-y-1">
                        <li>–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
                        <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∏ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞</li>
                        <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤</li>
                        <li>–¢–µ—Å—Ç–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç —Ä–µ—Ü–µ–ø—Ç!</li>
                    </ul>
                </div>
            </CardContent>
        </Card>
    )
}
