/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤
 */

import RecipesService from '@/services/recipes.service';
import AuthService from '@/services/auth.service';

export const runDeleteRecipeDiagnostics = async (recipeId) => {
    const results = {
        timestamp: new Date().toISOString(),
        recipeId: recipeId,
        tests: {},
        summary: {
            passed: 0,
            failed: 0,
            total: 0
        }
    };

    console.log('üîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞...');
    console.log(`üìã ID —Ä–µ—Ü–µ–ø—Ç–∞: ${recipeId}`);

    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    try {
        const token = AuthService.getAccessToken();
        if (token) {
            results.tests.authentication = {
                success: true,
                message: '–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω',
                token: token.substring(0, 20) + '...'
            };
            console.log('‚úÖ –¢–µ—Å—Ç 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –ü–†–û–ô–î–ï–ù');
        } else {
            results.tests.authentication = {
                success: false,
                message: '–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω'
            };
            console.log('‚ùå –¢–µ—Å—Ç 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –ü–†–û–í–ê–õ–ï–ù');
        }
    } catch (error) {
        results.tests.authentication = {
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
            error: error.message
        };
        console.log('‚ùå –¢–µ—Å—Ç 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –û–®–ò–ë–ö–ê:', error.message);
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
    try {
        const recipe = await RecipesService.getRecipeById(recipeId);
        if (recipe) {
            results.tests.recipeExists = {
                success: true,
                message: '–†–µ—Ü–µ–ø—Ç –Ω–∞–π–¥–µ–Ω',
                recipe: {
                    id: recipe.id,
                    title: recipe.title,
                    author: recipe.author
                }
            };
            console.log('‚úÖ –¢–µ—Å—Ç 2: –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ - –ü–†–û–ô–î–ï–ù');
            console.log(`üìù –†–µ—Ü–µ–ø—Ç: "${recipe.title}" (–∞–≤—Ç–æ—Ä: ${recipe.author.username})`);
        } else {
            results.tests.recipeExists = {
                success: false,
                message: '–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
            };
            console.log('‚ùå –¢–µ—Å—Ç 2: –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ - –ü–†–û–í–ê–õ–ï–ù');
        }
    } catch (error) {
        results.tests.recipeExists = {
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞',
            error: error.message
        };
        console.log('‚ùå –¢–µ—Å—Ç 2: –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ - –û–®–ò–ë–ö–ê:', error.message);
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ deleteRecipe
    try {
        if (typeof RecipesService.deleteRecipe === 'function') {
            results.tests.deleteMethodExists = {
                success: true,
                message: '–ú–µ—Ç–æ–¥ deleteRecipe —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
            };
            console.log('‚úÖ –¢–µ—Å—Ç 3: –ú–µ—Ç–æ–¥ deleteRecipe - –ü–†–û–ô–î–ï–ù');
        } else {
            results.tests.deleteMethodExists = {
                success: false,
                message: '–ú–µ—Ç–æ–¥ deleteRecipe –Ω–µ –Ω–∞–π–¥–µ–Ω'
            };
            console.log('‚ùå –¢–µ—Å—Ç 3: –ú–µ—Ç–æ–¥ deleteRecipe - –ü–†–û–í–ê–õ–ï–ù');
        }
    } catch (error) {
        results.tests.deleteMethodExists = {
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–µ—Ç–æ–¥–∞ deleteRecipe',
            error: error.message
        };
        console.log('‚ùå –¢–µ—Å—Ç 3: –ú–µ—Ç–æ–¥ deleteRecipe - –û–®–ò–ë–ö–ê:', error.message);
    }

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backend
    try {
        const response = await fetch('http://localhost:8000/docs');
        if (response.ok) {
            results.tests.backendAvailable = {
                success: true,
                message: 'Backend —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω',
                status: response.status
            };
            console.log('‚úÖ –¢–µ—Å—Ç 4: –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend - –ü–†–û–ô–î–ï–ù');
        } else {
            results.tests.backendAvailable = {
                success: false,
                message: 'Backend —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
                status: response.status
            };
            console.log('‚ùå –¢–µ—Å—Ç 4: –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend - –ü–†–û–í–ê–õ–ï–ù');
        }
    } catch (error) {
        results.tests.backendAvailable = {
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ backend',
            error: error.message
        };
        console.log('‚ùå –¢–µ—Å—Ç 4: –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend - –û–®–ò–ë–ö–ê:', error.message);
    }

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Ü–µ–ø—Ç—É
    try {
        const token = AuthService.getAccessToken();
        if (token) {
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ü–µ–ø—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
            const recipeResponse = await fetch(`http://localhost:8000/v1/recipes/${recipeId}`, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (recipeResponse.ok) {
                const recipeData = await recipeResponse.json();

                // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                const userResponse = await fetch(`http://localhost:8000/v1/users/me`, {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (userResponse.ok) {
                    const userData = await userResponse.json();
                    const canDelete = userData.id === recipeData.author.id || userData.is_superuser;

                    results.tests.deletePermissions = {
                        success: canDelete,
                        message: canDelete
                            ? '–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞'
                            : '–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞',
                        userInfo: {
                            userId: userData.id,
                            username: userData.username,
                            isSuperuser: userData.is_superuser,
                            authorId: recipeData.author.id,
                            authorUsername: recipeData.author.username
                        }
                    };

                    if (canDelete) {
                        console.log('‚úÖ –¢–µ—Å—Ç 5: –ü—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –ü–†–û–ô–î–ï–ù');
                        console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.username} (ID: ${userData.id})`);
                        console.log(`üìù –ê–≤—Ç–æ—Ä —Ä–µ—Ü–µ–ø—Ç–∞: ${recipeData.author.username} (ID: ${recipeData.author.id})`);
                        console.log(`üîë –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.is_superuser ? '–î–∞' : '–ù–µ—Ç'}`);
                    } else {
                        console.log('‚ùå –¢–µ—Å—Ç 5: –ü—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –ü–†–û–í–ê–õ–ï–ù');
                        console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.username} (ID: ${userData.id})`);
                        console.log(`üìù –ê–≤—Ç–æ—Ä —Ä–µ—Ü–µ–ø—Ç–∞: ${recipeData.author.username} (ID: ${recipeData.author.id})`);
                        console.log(`üîë –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.is_superuser ? '–î–∞' : '–ù–µ—Ç'}`);
                    }
                } else {
                    results.tests.deletePermissions = {
                        success: false,
                        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',
                        status: userResponse.status
                    };
                    console.log('‚ùå –¢–µ—Å—Ç 5: –ü—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –û–®–ò–ë–ö–ê (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)');
                }
            } else {
                results.tests.deletePermissions = {
                    success: false,
                    message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ü–µ–ø—Ç–µ',
                    status: recipeResponse.status
                };
                console.log('‚ùå –¢–µ—Å—Ç 5: –ü—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –û–®–ò–ë–ö–ê (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç)');
            }
        } else {
            results.tests.deletePermissions = {
                success: false,
                message: '–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤'
            };
            console.log('‚ùå –¢–µ—Å—Ç 5: –ü—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –ü–†–û–í–ê–õ–ï–ù (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞)');
        }
    } catch (error) {
        results.tests.deletePermissions = {
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞',
            error: error.message
        };
        console.log('‚ùå –¢–µ—Å—Ç 5: –ü—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –û–®–ò–ë–ö–ê:', error.message);
    }

    // –¢–µ—Å—Ç 6: –°–∏–º—É–ª—è—Ü–∏—è DELETE –∑–∞–ø—Ä–æ—Å–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ endpoint)
    try {
        const token = AuthService.getAccessToken();
        if (token && results.tests.deletePermissions?.success) {
            console.log('üß™ –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ DELETE endpoint (–±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è)...');

            // –î–µ–ª–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–∞ DELETE
            const optionsResponse = await fetch(`http://localhost:8000/v1/recipes/${recipeId}`, {
                method: 'OPTIONS',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            results.tests.deleteEndpointAccessible = {
                success: optionsResponse.status === 200 || optionsResponse.status === 204,
                message: `DELETE endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å OPTIONS: ${optionsResponse.status})`,
                status: optionsResponse.status,
                allowedMethods: optionsResponse.headers.get('Allow') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
            };

            if (results.tests.deleteEndpointAccessible.success) {
                console.log('‚úÖ –¢–µ—Å—Ç 6: DELETE endpoint - –ü–†–û–ô–î–ï–ù');
                console.log(`üì° –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã: ${results.tests.deleteEndpointAccessible.allowedMethods}`);
            } else {
                console.log('‚ùå –¢–µ—Å—Ç 6: DELETE endpoint - –ü–†–û–í–ê–õ–ï–ù');
            }
        } else {
            results.tests.deleteEndpointAccessible = {
                success: false,
                message: '–ü—Ä–æ–ø—É—â–µ–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞'
            };
            console.log('‚è≠Ô∏è –¢–µ—Å—Ç 6: DELETE endpoint - –ü–†–û–ü–£–©–ï–ù (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –ø—Ä–∞–≤)');
        }
    } catch (error) {
        results.tests.deleteEndpointAccessible = {
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ DELETE endpoint',
            error: error.message
        };
        console.log('‚ùå –¢–µ—Å—Ç 6: DELETE endpoint - –û–®–ò–ë–ö–ê:', error.message);
    }

    // –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    Object.values(results.tests).forEach(test => {
        results.summary.total++;
        if (test.success) {
            results.summary.passed++;
        } else {
            results.summary.failed++;
        }
    });

    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:');
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${results.summary.passed}`);
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${results.summary.failed}`);
    console.log(`üìã –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${results.summary.total}`);

    if (results.summary.failed > 0) {
        console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:');

        if (!results.tests.authentication?.success) {
            console.log('- –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        }

        if (!results.tests.recipeExists?.success) {
            console.log('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ü–µ–ø—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID');
        }

        if (!results.tests.deleteMethodExists?.success) {
            console.log('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–∞ deleteRecipe –≤ RecipesService');
        }

        if (!results.tests.backendAvailable?.success) {
            console.log('- –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 8000');
        }

        if (!results.tests.deletePermissions?.success) {
            console.log('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Ü–µ–ø—Ç—É (–≤–ª–∞–¥–µ–ª–µ—Ü –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)');
        }

        if (!results.tests.deleteEndpointAccessible?.success) {
            console.log('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å DELETE endpoint –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
        }
    }

    return results;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
window.runDeleteRecipeDiagnostics = runDeleteRecipeDiagnostics;

export default runDeleteRecipeDiagnostics;